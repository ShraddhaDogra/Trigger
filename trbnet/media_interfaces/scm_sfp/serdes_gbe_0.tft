@set suppresnewline=on@

@comment --------------------------------------------------------------------- @
@comment Template-drive TFI generator			                       @
@comment Template for TFI generation.		                               @
@comment --------------------------------------------------------------------- @

@set suppresnewline=off@
 TOOL:     orcapp 
 DATE:     %date% 
 TITLE:    %title%
 MODULE:   %module%
 DESIGN:   %module%
 FILENAME: %filename%
 PROJECT:  %project%
 VERSION:  %ver%
 This file is auto generated by the ispLEVER
@set suppresnewline=on@

@cr@
@cr@

@set sigdelim=@

NOTE: This readme file has been provided to instantiate the interface@cr@
netlist.  Since this template contains synthesis attributes for precision that@cr@
are crucial to the design flow, we recommend that you use this@cr@
template in your FPGA design.@cr@
entity chip is@cr@
port (@cr@
@cr@
--  Add your FPGA design top level I/Os here@cr@
@cr@
@cr@
-- ASIC side pins for PCSA.  These pins must exist for the@cr@
-- PCS core.@cr@
-- This defines all the high-speed ports. You may have to remove@cr@
-- some of them depending on your design.@cr@
  refclkp         : in std_logic;@cr@
  refclkn         : in std_logic;@cr@
  hdinp_0          : in std_logic;@cr@
  hdinn_0          : in std_logic;@cr@
  hdinp_1          : in std_logic;@cr@
  hdinn_1          : in std_logic;@cr@
  hdinp_2          : in std_logic;@cr@
  hdinn_2          : in std_logic;@cr@
  hdinp_3          : in std_logic;@cr@
  hdinn_3          : in std_logic;@cr@
@cr@
  hdoutp_0         : out std_logic;@cr@
  hdoutn_0         : out std_logic;@cr@
  hdoutp_1         : out std_logic;@cr@
  hdoutn_1         : out std_logic;@cr@
  hdoutp_2         : out std_logic;@cr@
  hdoutn_2         : out std_logic;@cr@
  hdoutp_3         : out std_logic;@cr@
  hdoutn_3         : out std_logic;@cr@
@cr@
@cr@
);@cr@
end chip;@cr@
@cr@
architecture chip_arch of chip is@cr@
@cr@
-- This defines all the high-speed ports. You may have to remove@cr@
-- some of them depending on your design.@cr@
attribute nopad : string;@cr@
attribute nopad of@cr@
  refclkp, refclkn, @cr@
  hdinp_0, hdinn_0, hdinp_1, hdinn_1,@cr@
  hdinp_2, hdinn_2, hdinp_3, hdinn_3,@cr@
  hdoutp_0, hdoutn_0, hdoutp_1, hdoutn_1,@cr@
  hdoutp_2, hdoutn_2, hdoutp_3, hdoutn_3 : signal is "true";@cr@

@cr@
@tab@COMPONENT %module%
@set sigdelim=@
@cr@@tab@PORT(
@iterate@%iport%@cr@@tab@@tab@@iterator@ : IN @vhdl_typedec@;@enditerate@
@ifhas oport=*@ @comment if the design has any output ports... @
   @iterate@%bport%@cr@@tab@@tab@@iterator@ : INOUT @vhdl_typedec@;@enditerate@
   @set sigdelim=;@
   @iterate@%oport%@cr@@tab@@tab@@iterator@ : OUT @vhdl_typedec@@enditerate@
@endif@
@ifnhas oport=*@ @comment we need an "else in this language! @
   @set sigdelim=;@
   @iterate@%bport%@cr@@tab@@tab@@iterator@ : INOUT @vhdl_typedec@@enditerate@
@endif@
@cr@@tab@@tab@);@cr@
@tab@END COMPONENT;@cr@@cr@
@comment Now do a signal declaration for each port @

@cr@@cr@
@comment do the component instantiation                                    @
@set sigdelim=,@
@tab@uut: %module% PORT MAP(
@iterate@%port%
@cr@@tab@@tab@@iterator@ => @iterator@@enditerate@
@cr@@tab@);@cr@@cr@
@set suppresnewline=off@
