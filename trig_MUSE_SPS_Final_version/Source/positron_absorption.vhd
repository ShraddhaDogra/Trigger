--  This is SPS trigger code for signal generated by ANDing (one front bar) with (the OR of--- adjacent five back bars).
---- //////////////////////////////// Written by Shraddha Dogra.///////////////////////////


library  ieee;
use  ieee.std_logic_1164.all;

library work;
use work.trb_net_std.all;

entity positron_absorption is
port(
      in_clk: in std_logic;
	  in_front_bars: in std_logic_vector (17 downto 0);
	  in_back_bars: in std_logic_vector (27 downto 0);
	  Out_positron_absorption: out std_logic);
end positron_absorption;

architecture structural of positron_absorption is
 signal or_front	: std_logic_vector(0 downto 0);
 signal or_back		: std_logic_vector(0 downto 0);
 signal or_front_30ns	: std_logic_vector(0 downto 0);
 signal or_back_100ns	: std_logic_vector(0 downto 0);
	
 --Ievgen:  this is a new function that replaces "signal_stretch_48" module
 component PulseStretch is 
   generic(
	 STAGES	: integer;
     WIDTH	: integer
   );
   port (
		sig_in		: in std_logic_vector(WIDTH -1 downto 0);
		clk			: in std_logic;		
		sig_out		: out std_logic_vector(WIDTH -1 downto 0)
    );
 end component PulseStretch;	
 -------------------------------  CODE: ----------------------------------
 begin 
	--- OR ALL inputs:
	or_front(0) <= or_all(in_front_bars);
	or_back(0)	 <= or_all(in_back_bars);
	
	--- Generate trigger inputs of different width for further logic:
OR_Front_Bars_30ns:
	PulseStretch generic map(
			STAGES	=> 3,
			WIDTH	=> 1
		)
		port map(
			sig_in	=> or_front,
			clk		=> in_clk,		
			sig_out => or_front_30ns
		);

OR_Back_Bars_100ns:
	PulseStretch generic map(
			STAGES	=> 10,
			WIDTH	=> 1
		)
		port map(
			sig_in	=> or_back,
			clk		=> in_clk,		
			sig_out => or_back_100ns
		);

Out_positron_absorption <= (or_front_30ns(0) AND NOT(or_back_100ns(0)));
  
end structural;




