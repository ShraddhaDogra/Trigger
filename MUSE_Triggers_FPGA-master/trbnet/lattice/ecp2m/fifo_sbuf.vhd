-- VHDL netlist generated by SCUBA ispLever_v8.0_PROD_Build (41)
-- Module  Version: 4.7
--/opt/lattice/ispLEVER8.0/isptools/ispfpga/bin/lin/scuba -w -lang vhdl -synth synplify -bus_exp 7 -bb -arch ep5m00 -type ebfifo -pfu_fifo -depth 8 -width 19 -depth 8 -no_enable -pe -1 -pf 5 -e 

-- Mon Dec 14 14:20:53 2009

library IEEE;
use IEEE.std_logic_1164.all;
-- synopsys translate_off
library ecp2m;
use ecp2m.components.all;
-- synopsys translate_on

entity fifo_sbuf is
    port (
        Data: in  std_logic_vector(18 downto 0); 
        Clock: in  std_logic; 
        WrEn: in  std_logic; 
        RdEn: in  std_logic; 
        Reset: in  std_logic; 
        Q: out  std_logic_vector(18 downto 0); 
        Empty: out  std_logic; 
        Full: out  std_logic; 
        AlmostFull: out  std_logic);
end fifo_sbuf;

architecture Structure of fifo_sbuf is

    -- internal signal declarations
    signal invout_2: std_logic;
    signal invout_1: std_logic;
    signal rden_i_inv: std_logic;
    signal invout_0: std_logic;
    signal cnt_con_inv: std_logic;
    signal r_nw_inv: std_logic;
    signal fcnt_en_inv_inv: std_logic;
    signal fcnt_en: std_logic;
    signal empty_i: std_logic;
    signal empty_d: std_logic;
    signal full_i: std_logic;
    signal full_d: std_logic;
    signal ifcount_0: std_logic;
    signal ifcount_1: std_logic;
    signal bdcnt_bctr_ci: std_logic;
    signal ifcount_2: std_logic;
    signal ifcount_3: std_logic;
    signal co1: std_logic;
    signal cnt_con: std_logic;
    signal co0: std_logic;
    signal cmp_ci: std_logic;
    signal rden_i: std_logic;
    signal co0_1: std_logic;
    signal cmp_le_1: std_logic;
    signal cmp_le_1_c: std_logic;
    signal cmp_ci_1: std_logic;
    signal co0_2: std_logic;
    signal wren_i: std_logic;
    signal wren_i_inv: std_logic;
    signal cmp_ge_d1: std_logic;
    signal cmp_ge_d1_c: std_logic;
    signal iwcount_0: std_logic;
    signal iwcount_1: std_logic;
    signal w_ctr_ci: std_logic;
    signal iwcount_2: std_logic;
    signal iwcount_3: std_logic;
    signal co1_1: std_logic;
    signal wcount_3: std_logic;
    signal co0_3: std_logic;
    signal ircount_0: std_logic;
    signal ircount_1: std_logic;
    signal r_ctr_ci: std_logic;
    signal ircount_2: std_logic;
    signal ircount_3: std_logic;
    signal co1_2: std_logic;
    signal rcount_3: std_logic;
    signal co0_4: std_logic;
    signal cmp_ci_2: std_logic;
    signal fcnt_en_inv: std_logic;
    signal r_nw: std_logic;
    signal fcount_0: std_logic;
    signal fcount_1: std_logic;
    signal co0_5: std_logic;
    signal scuba_vhi: std_logic;
    signal fcount_2: std_logic;
    signal fcount_3: std_logic;
    signal af_d: std_logic;
    signal af_d_c: std_logic;
    signal rdataout18: std_logic;
    signal rdataout17: std_logic;
    signal rdataout16: std_logic;
    signal rdataout15: std_logic;
    signal rdataout14: std_logic;
    signal rdataout13: std_logic;
    signal rdataout12: std_logic;
    signal rdataout11: std_logic;
    signal rdataout10: std_logic;
    signal rdataout9: std_logic;
    signal rdataout8: std_logic;
    signal rdataout7: std_logic;
    signal rdataout6: std_logic;
    signal rdataout5: std_logic;
    signal rdataout4: std_logic;
    signal rdataout3: std_logic;
    signal rdataout2: std_logic;
    signal rdataout1: std_logic;
    signal rdataout0: std_logic;
    signal rcount_2: std_logic;
    signal rcount_1: std_logic;
    signal rcount_0: std_logic;
    signal dec0_wre3: std_logic;
    signal scuba_vlo: std_logic;
    signal wcount_2: std_logic;
    signal wcount_1: std_logic;
    signal wcount_0: std_logic;

    -- local component declarations
    component AGEB2
        port (A0: in  std_logic; A1: in  std_logic; B0: in  std_logic; 
            B1: in  std_logic; CI: in  std_logic; GE: out  std_logic);
    end component;
    component ALEB2
        port (A0: in  std_logic; A1: in  std_logic; B0: in  std_logic; 
            B1: in  std_logic; CI: in  std_logic; LE: out  std_logic);
    end component;
    component AND2
        port (A: in  std_logic; B: in  std_logic; Z: out  std_logic);
    end component;
    component CU2
        port (CI: in  std_logic; PC0: in  std_logic; PC1: in  std_logic; 
            CO: out  std_logic; NC0: out  std_logic; NC1: out  std_logic);
    end component;
    component CB2
        port (CI: in  std_logic; PC0: in  std_logic; PC1: in  std_logic; 
            CON: in  std_logic; CO: out  std_logic; NC0: out  std_logic; 
            NC1: out  std_logic);
    end component;
    component FADD2B
        port (A0: in  std_logic; A1: in  std_logic; B0: in  std_logic; 
            B1: in  std_logic; CI: in  std_logic; COUT: out  std_logic; 
            S0: out  std_logic; S1: out  std_logic);
    end component;
    component FD1P3DX
    -- synopsys translate_off
        generic (GSR : in String);
    -- synopsys translate_on
        port (D: in  std_logic; SP: in  std_logic; CK: in  std_logic; 
            CD: in  std_logic; Q: out  std_logic);
    end component;
    component FD1S3BX
    -- synopsys translate_off
        generic (GSR : in String);
    -- synopsys translate_on
        port (D: in  std_logic; CK: in  std_logic; PD: in  std_logic; 
            Q: out  std_logic);
    end component;
    component FD1S3DX
    -- synopsys translate_off
        generic (GSR : in String);
    -- synopsys translate_on
        port (D: in  std_logic; CK: in  std_logic; CD: in  std_logic; 
            Q: out  std_logic);
    end component;
    component INV
        port (A: in  std_logic; Z: out  std_logic);
    end component;
    component ROM16X1
    -- synopsys translate_off
        generic (initval : in String);
    -- synopsys translate_on
        port (AD3: in  std_logic; AD2: in  std_logic; AD1: in  std_logic; 
            AD0: in  std_logic; DO0: out  std_logic);
    end component;
    component DPR16X4A
        port (DI0: in  std_logic; DI1: in  std_logic; DI2: in  std_logic; 
            DI3: in  std_logic; WCK: in  std_logic; WRE: in  std_logic; 
            RAD0: in  std_logic; RAD1: in  std_logic; 
            RAD2: in  std_logic; RAD3: in  std_logic; 
            WAD0: in  std_logic; WAD1: in  std_logic; 
            WAD2: in  std_logic; WAD3: in  std_logic; 
            DO0: out  std_logic; DO1: out  std_logic; 
            DO2: out  std_logic; DO3: out  std_logic);
    end component;
    component VHI
        port (Z: out  std_logic);
    end component;
    component VLO
        port (Z: out  std_logic);
    end component;
    component XOR2
        port (A: in  std_logic; B: in  std_logic; Z: out  std_logic);
    end component;
    attribute initval : string; 
    attribute GSR : string; 
    attribute initval of LUT4_2 : label is "0x3232";
    attribute initval of LUT4_1 : label is "0x3232";
    attribute initval of LUT4_0 : label is "0x8000";
    attribute GSR of FF_33 : label is "ENABLED";
    attribute GSR of FF_32 : label is "ENABLED";
    attribute GSR of FF_31 : label is "ENABLED";
    attribute GSR of FF_30 : label is "ENABLED";
    attribute GSR of FF_29 : label is "ENABLED";
    attribute GSR of FF_28 : label is "ENABLED";
    attribute GSR of FF_27 : label is "ENABLED";
    attribute GSR of FF_26 : label is "ENABLED";
    attribute GSR of FF_25 : label is "ENABLED";
    attribute GSR of FF_24 : label is "ENABLED";
    attribute GSR of FF_23 : label is "ENABLED";
    attribute GSR of FF_22 : label is "ENABLED";
    attribute GSR of FF_21 : label is "ENABLED";
    attribute GSR of FF_20 : label is "ENABLED";
    attribute GSR of FF_19 : label is "ENABLED";
    attribute GSR of FF_18 : label is "ENABLED";
    attribute GSR of FF_17 : label is "ENABLED";
    attribute GSR of FF_16 : label is "ENABLED";
    attribute GSR of FF_15 : label is "ENABLED";
    attribute GSR of FF_14 : label is "ENABLED";
    attribute GSR of FF_13 : label is "ENABLED";
    attribute GSR of FF_12 : label is "ENABLED";
    attribute GSR of FF_11 : label is "ENABLED";
    attribute GSR of FF_10 : label is "ENABLED";
    attribute GSR of FF_9 : label is "ENABLED";
    attribute GSR of FF_8 : label is "ENABLED";
    attribute GSR of FF_7 : label is "ENABLED";
    attribute GSR of FF_6 : label is "ENABLED";
    attribute GSR of FF_5 : label is "ENABLED";
    attribute GSR of FF_4 : label is "ENABLED";
    attribute GSR of FF_3 : label is "ENABLED";
    attribute GSR of FF_2 : label is "ENABLED";
    attribute GSR of FF_1 : label is "ENABLED";
    attribute GSR of FF_0 : label is "ENABLED";
    attribute syn_keep : boolean;

begin
    -- component instantiation statements
    AND2_t4: AND2
        port map (A=>WrEn, B=>invout_2, Z=>wren_i);

    INV_8: INV
        port map (A=>full_i, Z=>invout_2);

    AND2_t3: AND2
        port map (A=>RdEn, B=>invout_1, Z=>rden_i);

    INV_7: INV
        port map (A=>empty_i, Z=>invout_1);

    AND2_t2: AND2
        port map (A=>wren_i, B=>rden_i_inv, Z=>cnt_con);

    XOR2_t1: XOR2
        port map (A=>wren_i, B=>rden_i, Z=>fcnt_en);

    INV_6: INV
        port map (A=>rden_i, Z=>rden_i_inv);

    INV_5: INV
        port map (A=>wren_i, Z=>wren_i_inv);

    LUT4_2: ROM16X1
        -- synopsys translate_off
        generic map (initval=> "0x3232")
        -- synopsys translate_on
        port map (AD3=>scuba_vlo, AD2=>cmp_le_1, AD1=>wren_i, 
            AD0=>empty_i, DO0=>empty_d);

    LUT4_1: ROM16X1
        -- synopsys translate_off
        generic map (initval=> "0x3232")
        -- synopsys translate_on
        port map (AD3=>scuba_vlo, AD2=>cmp_ge_d1, AD1=>rden_i, 
            AD0=>full_i, DO0=>full_d);

    LUT4_0: ROM16X1
        -- synopsys translate_off
        generic map (initval=> "0x8000")
        -- synopsys translate_on
        port map (AD3=>scuba_vhi, AD2=>wren_i, AD1=>scuba_vhi, 
            AD0=>scuba_vhi, DO0=>dec0_wre3);

    AND2_t0: AND2
        port map (A=>rden_i, B=>invout_0, Z=>r_nw);

    INV_4: INV
        port map (A=>wren_i, Z=>invout_0);

    INV_3: INV
        port map (A=>fcnt_en, Z=>fcnt_en_inv);

    INV_2: INV
        port map (A=>cnt_con, Z=>cnt_con_inv);

    INV_1: INV
        port map (A=>r_nw, Z=>r_nw_inv);

    INV_0: INV
        port map (A=>fcnt_en_inv, Z=>fcnt_en_inv_inv);

    FF_33: FD1P3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>ifcount_0, SP=>fcnt_en, CK=>Clock, CD=>Reset, 
            Q=>fcount_0);

    FF_32: FD1P3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>ifcount_1, SP=>fcnt_en, CK=>Clock, CD=>Reset, 
            Q=>fcount_1);

    FF_31: FD1P3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>ifcount_2, SP=>fcnt_en, CK=>Clock, CD=>Reset, 
            Q=>fcount_2);

    FF_30: FD1P3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>ifcount_3, SP=>fcnt_en, CK=>Clock, CD=>Reset, 
            Q=>fcount_3);

    FF_29: FD1S3BX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>empty_d, CK=>Clock, PD=>Reset, Q=>empty_i);

    FF_28: FD1S3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>full_d, CK=>Clock, CD=>Reset, Q=>full_i);

    FF_27: FD1P3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>iwcount_0, SP=>wren_i, CK=>Clock, CD=>Reset, 
            Q=>wcount_0);

    FF_26: FD1P3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>iwcount_1, SP=>wren_i, CK=>Clock, CD=>Reset, 
            Q=>wcount_1);

    FF_25: FD1P3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>iwcount_2, SP=>wren_i, CK=>Clock, CD=>Reset, 
            Q=>wcount_2);

    FF_24: FD1P3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>iwcount_3, SP=>wren_i, CK=>Clock, CD=>Reset, 
            Q=>wcount_3);

    FF_23: FD1P3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>ircount_0, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>rcount_0);

    FF_22: FD1P3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>ircount_1, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>rcount_1);

    FF_21: FD1P3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>ircount_2, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>rcount_2);

    FF_20: FD1P3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>ircount_3, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>rcount_3);

    FF_19: FD1P3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>rdataout0, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>Q(0));

    FF_18: FD1P3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>rdataout1, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>Q(1));

    FF_17: FD1P3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>rdataout2, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>Q(2));

    FF_16: FD1P3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>rdataout3, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>Q(3));

    FF_15: FD1P3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>rdataout4, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>Q(4));

    FF_14: FD1P3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>rdataout5, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>Q(5));

    FF_13: FD1P3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>rdataout6, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>Q(6));

    FF_12: FD1P3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>rdataout7, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>Q(7));

    FF_11: FD1P3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>rdataout8, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>Q(8));

    FF_10: FD1P3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>rdataout9, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>Q(9));

    FF_9: FD1P3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>rdataout10, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>Q(10));

    FF_8: FD1P3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>rdataout11, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>Q(11));

    FF_7: FD1P3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>rdataout12, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>Q(12));

    FF_6: FD1P3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>rdataout13, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>Q(13));

    FF_5: FD1P3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>rdataout14, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>Q(14));

    FF_4: FD1P3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>rdataout15, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>Q(15));

    FF_3: FD1P3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>rdataout16, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>Q(16));

    FF_2: FD1P3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>rdataout17, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>Q(17));

    FF_1: FD1P3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>rdataout18, SP=>rden_i, CK=>Clock, CD=>Reset, 
            Q=>Q(18));

    FF_0: FD1S3DX
        -- synopsys translate_off
        generic map (GSR=> "ENABLED")
        -- synopsys translate_on
        port map (D=>af_d, CK=>Clock, CD=>Reset, Q=>AlmostFull);

    bdcnt_bctr_cia: FADD2B
        port map (A0=>scuba_vlo, A1=>cnt_con, B0=>scuba_vlo, B1=>cnt_con, 
            CI=>scuba_vlo, COUT=>bdcnt_bctr_ci, S0=>open, S1=>open);

    bdcnt_bctr_0: CB2
        port map (CI=>bdcnt_bctr_ci, PC0=>fcount_0, PC1=>fcount_1, 
            CON=>cnt_con, CO=>co0, NC0=>ifcount_0, NC1=>ifcount_1);

    bdcnt_bctr_1: CB2
        port map (CI=>co0, PC0=>fcount_2, PC1=>fcount_3, CON=>cnt_con, 
            CO=>co1, NC0=>ifcount_2, NC1=>ifcount_3);

    e_cmp_ci_a: FADD2B
        port map (A0=>scuba_vhi, A1=>scuba_vhi, B0=>scuba_vhi, 
            B1=>scuba_vhi, CI=>scuba_vlo, COUT=>cmp_ci, S0=>open, 
            S1=>open);

    e_cmp_0: ALEB2
        port map (A0=>fcount_0, A1=>fcount_1, B0=>rden_i, B1=>scuba_vlo, 
            CI=>cmp_ci, LE=>co0_1);

    e_cmp_1: ALEB2
        port map (A0=>fcount_2, A1=>fcount_3, B0=>scuba_vlo, 
            B1=>scuba_vlo, CI=>co0_1, LE=>cmp_le_1_c);

    a0: FADD2B
        port map (A0=>scuba_vlo, A1=>scuba_vlo, B0=>scuba_vlo, 
            B1=>scuba_vlo, CI=>cmp_le_1_c, COUT=>open, S0=>cmp_le_1, 
            S1=>open);

    g_cmp_ci_a: FADD2B
        port map (A0=>scuba_vhi, A1=>scuba_vhi, B0=>scuba_vhi, 
            B1=>scuba_vhi, CI=>scuba_vlo, COUT=>cmp_ci_1, S0=>open, 
            S1=>open);

    g_cmp_0: AGEB2
        port map (A0=>fcount_0, A1=>fcount_1, B0=>wren_i, B1=>wren_i, 
            CI=>cmp_ci_1, GE=>co0_2);

    g_cmp_1: AGEB2
        port map (A0=>fcount_2, A1=>fcount_3, B0=>wren_i, B1=>wren_i_inv, 
            CI=>co0_2, GE=>cmp_ge_d1_c);

    a1: FADD2B
        port map (A0=>scuba_vlo, A1=>scuba_vlo, B0=>scuba_vlo, 
            B1=>scuba_vlo, CI=>cmp_ge_d1_c, COUT=>open, S0=>cmp_ge_d1, 
            S1=>open);

    w_ctr_cia: FADD2B
        port map (A0=>scuba_vlo, A1=>scuba_vhi, B0=>scuba_vlo, 
            B1=>scuba_vhi, CI=>scuba_vlo, COUT=>w_ctr_ci, S0=>open, 
            S1=>open);

    w_ctr_0: CU2
        port map (CI=>w_ctr_ci, PC0=>wcount_0, PC1=>wcount_1, CO=>co0_3, 
            NC0=>iwcount_0, NC1=>iwcount_1);

    w_ctr_1: CU2
        port map (CI=>co0_3, PC0=>wcount_2, PC1=>wcount_3, CO=>co1_1, 
            NC0=>iwcount_2, NC1=>iwcount_3);

    r_ctr_cia: FADD2B
        port map (A0=>scuba_vlo, A1=>scuba_vhi, B0=>scuba_vlo, 
            B1=>scuba_vhi, CI=>scuba_vlo, COUT=>r_ctr_ci, S0=>open, 
            S1=>open);

    r_ctr_0: CU2
        port map (CI=>r_ctr_ci, PC0=>rcount_0, PC1=>rcount_1, CO=>co0_4, 
            NC0=>ircount_0, NC1=>ircount_1);

    r_ctr_1: CU2
        port map (CI=>co0_4, PC0=>rcount_2, PC1=>rcount_3, CO=>co1_2, 
            NC0=>ircount_2, NC1=>ircount_3);

    af_cmp_ci_a: FADD2B
        port map (A0=>scuba_vhi, A1=>scuba_vhi, B0=>scuba_vhi, 
            B1=>scuba_vhi, CI=>scuba_vlo, COUT=>cmp_ci_2, S0=>open, 
            S1=>open);

    af_cmp_0: AGEB2
        port map (A0=>fcount_0, A1=>fcount_1, B0=>fcnt_en_inv, B1=>r_nw, 
            CI=>cmp_ci_2, GE=>co0_5);

    scuba_vhi_inst: VHI
        port map (Z=>scuba_vhi);

    af_cmp_1: AGEB2
        port map (A0=>fcount_2, A1=>fcount_3, B0=>scuba_vhi, 
            B1=>scuba_vlo, CI=>co0_5, GE=>af_d_c);

    a2: FADD2B
        port map (A0=>scuba_vlo, A1=>scuba_vlo, B0=>scuba_vlo, 
            B1=>scuba_vlo, CI=>af_d_c, COUT=>open, S0=>af_d, S1=>open);

    fifo_pfu_0_0: DPR16X4A
        port map (DI0=>Data(16), DI1=>Data(17), DI2=>Data(18), 
            DI3=>scuba_vlo, WCK=>Clock, WRE=>dec0_wre3, RAD0=>rcount_0, 
            RAD1=>rcount_1, RAD2=>rcount_2, RAD3=>scuba_vlo, 
            WAD0=>wcount_0, WAD1=>wcount_1, WAD2=>wcount_2, 
            WAD3=>scuba_vlo, DO0=>rdataout16, DO1=>rdataout17, 
            DO2=>rdataout18, DO3=>open);

    fifo_pfu_0_1: DPR16X4A
        port map (DI0=>Data(12), DI1=>Data(13), DI2=>Data(14), 
            DI3=>Data(15), WCK=>Clock, WRE=>dec0_wre3, RAD0=>rcount_0, 
            RAD1=>rcount_1, RAD2=>rcount_2, RAD3=>scuba_vlo, 
            WAD0=>wcount_0, WAD1=>wcount_1, WAD2=>wcount_2, 
            WAD3=>scuba_vlo, DO0=>rdataout12, DO1=>rdataout13, 
            DO2=>rdataout14, DO3=>rdataout15);

    fifo_pfu_0_2: DPR16X4A
        port map (DI0=>Data(8), DI1=>Data(9), DI2=>Data(10), 
            DI3=>Data(11), WCK=>Clock, WRE=>dec0_wre3, RAD0=>rcount_0, 
            RAD1=>rcount_1, RAD2=>rcount_2, RAD3=>scuba_vlo, 
            WAD0=>wcount_0, WAD1=>wcount_1, WAD2=>wcount_2, 
            WAD3=>scuba_vlo, DO0=>rdataout8, DO1=>rdataout9, 
            DO2=>rdataout10, DO3=>rdataout11);

    fifo_pfu_0_3: DPR16X4A
        port map (DI0=>Data(4), DI1=>Data(5), DI2=>Data(6), DI3=>Data(7), 
            WCK=>Clock, WRE=>dec0_wre3, RAD0=>rcount_0, RAD1=>rcount_1, 
            RAD2=>rcount_2, RAD3=>scuba_vlo, WAD0=>wcount_0, 
            WAD1=>wcount_1, WAD2=>wcount_2, WAD3=>scuba_vlo, 
            DO0=>rdataout4, DO1=>rdataout5, DO2=>rdataout6, 
            DO3=>rdataout7);

    scuba_vlo_inst: VLO
        port map (Z=>scuba_vlo);

    fifo_pfu_0_4: DPR16X4A
        port map (DI0=>Data(0), DI1=>Data(1), DI2=>Data(2), DI3=>Data(3), 
            WCK=>Clock, WRE=>dec0_wre3, RAD0=>rcount_0, RAD1=>rcount_1, 
            RAD2=>rcount_2, RAD3=>scuba_vlo, WAD0=>wcount_0, 
            WAD1=>wcount_1, WAD2=>wcount_2, WAD3=>scuba_vlo, 
            DO0=>rdataout0, DO1=>rdataout1, DO2=>rdataout2, 
            DO3=>rdataout3);

    Empty <= empty_i;
    Full <= full_i;
end Structure;

-- synopsys translate_off
library ecp2m;
configuration Structure_CON of fifo_sbuf is
    for Structure
        for all:AGEB2 use entity ecp2m.AGEB2(V); end for;
        for all:ALEB2 use entity ecp2m.ALEB2(V); end for;
        for all:AND2 use entity ecp2m.AND2(V); end for;
        for all:CU2 use entity ecp2m.CU2(V); end for;
        for all:CB2 use entity ecp2m.CB2(V); end for;
        for all:FADD2B use entity ecp2m.FADD2B(V); end for;
        for all:FD1P3DX use entity ecp2m.FD1P3DX(V); end for;
        for all:FD1S3BX use entity ecp2m.FD1S3BX(V); end for;
        for all:FD1S3DX use entity ecp2m.FD1S3DX(V); end for;
        for all:INV use entity ecp2m.INV(V); end for;
        for all:ROM16X1 use entity ecp2m.ROM16X1(V); end for;
        for all:DPR16X4A use entity ecp2m.DPR16X4A(V); end for;
        for all:VHI use entity ecp2m.VHI(V); end for;
        for all:VLO use entity ecp2m.VLO(V); end for;
        for all:XOR2 use entity ecp2m.XOR2(V); end for;
    end for;
end Structure_CON;

-- synopsys translate_on
